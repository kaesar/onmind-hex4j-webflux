package co.onmind.hex4jwebflux.infrastructure.persistence.entities;

import org.springframework.data.annotation.Id;
import org.springframework.data.relational.core.mapping.Column;
import org.springframework.data.relational.core.mapping.Table;

import java.time.LocalDateTime;
import java.util.Objects;

/**
 * R2DBC entity representing a role in the database.
 * 
 * This entity maps to the 'roles' table and provides the persistence layer
 * representation of a role. It uses Spring Data R2DBC annotations for
 * reactive database operations.
 * 
 * <p>The entity is designed to work with R2DBC's reactive repository pattern
 * and supports automatic ID generation and timestamp management.</p>
 * 
 * @author OnMind (Cesar Andres Arcila Buitrago)
 * @version 1.0.0
 * @since 1.0.0
 */
@Table("roles")
public class RoleEntity {
    
    /**
     * Primary key identifier for the role.
     * Auto-generated by the database.
     */
    @Id
    private Long id;
    
    /**
     * Name of the role.
     * Must be unique across all roles.
     */
    @Column("name")
    private String name;
    
    /**
     * Timestamp when the role was created.
     * Automatically set when the entity is persisted.
     */
    @Column("created_at")
    private LocalDateTime createdAt;
    
    /**
     * Default constructor required by R2DBC.
     */
    public RoleEntity() {}
    
    /**
     * Constructor for creating a new role entity with name.
     * The createdAt timestamp is automatically set to the current time.
     * 
     * @param name The name of the role
     */
    public RoleEntity(String name) {
        this.name = name;
        this.createdAt = LocalDateTime.now();
    }
    
    /**
     * Full constructor for creating a role entity with all fields.
     * 
     * @param id The unique identifier
     * @param name The name of the role
     * @param createdAt The creation timestamp
     */
    public RoleEntity(Long id, String name, LocalDateTime createdAt) {
        this.id = id;
        this.name = name;
        this.createdAt = createdAt;
    }
    
    // Getters and Setters
    
    public Long getId() {
        return id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }
    
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        RoleEntity that = (RoleEntity) o;
        return Objects.equals(id, that.id) && 
               Objects.equals(name, that.name);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(id, name);
    }
    
    @Override
    public String toString() {
        return "RoleEntity{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", createdAt=" + createdAt +
                '}';
    }
}